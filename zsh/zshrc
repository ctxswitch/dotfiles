
mkdir -p $HOME/bin

KUBECTL_BIN=$(which kubectl)

export EDITOR=nvim
export GIT_EDITOR=nvim
export GPG_TTY=$(tty)

export PATH="$HOME/bin:$PATH"
export PATH=/usr/local/go/bin:/usr/local/kubebuilder/bin:$PATH
export PATH=/usr/local/opt/llvm/bin:$PATH
export PATH=$PATH:/usr/local/kubebuilder/bin
export PATH="${KREW_ROOT:-$HOME/.krew}/bin:$PATH"

HOMEBREW_PATH=$([[ "$(uname -s)" == "Darwin" ]] && echo "/opt/homebrew" || echo "/home/linuxbrew/.linuxbrew")
[ -d $HOMEBREW_PATH ] && eval "$($HOMEBREW_PATH/bin/brew shellenv)"

# Add Visual Studio Code (code) to the path if we have it installed.  This will go
# away once I've fully migrated to nvim.
[ -d /Applications/Visual\ Studio\ Code.app ] && \
	export PATH=$PATH:/Applications/Visual\ Studio\ Code.app/Contents/Resources/app/bin
# Add cargo to the path if we have rust installed.
[ -d $HOME/.cargo/bin ] && export PATH="$HOME/.cargo/bin:$PATH"
# Add go to the path if we have it installed.
[ -d $(go env GOPATH)/bin ] && export PATH=$(go env GOPATH)/bin:$PATH
# Allow local overrides.
[ -f ${HOME}/.zshrc.local ] && . ${HOME}/.zshrc.local

# Source Prezto.
[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ] && . "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
# Add completion for kubectl
[ -f ${KUBECTL_BIN} ] && . <(${KUBECTL_BIN} completion zsh)


export FZF_DEFAULT_COMMAND='fd --type f --strip-cwd-prefix --exclude .git --exclude vendor'
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
[ -f ~/.fzf.zsh ] && . ~/.fzf.zsh

# Helper functions
function cds() {
	S=$(FZF_DEFAULT_COMMAND="fd . --type d --max-depth 3 --exclude .git --exclude vendor --exclude node_modules ~/src" fzf)
	cd ${S}
}

function cdt() {
	S=$(FZF_DEFAULT_COMMAND="fd . --type d --max-depth 3 --exclude .git --exclude vendor --exclude node_modules ~/src" fzf)
	cd ${S}
	N=$(basename $S)
	tmux neww -n $N
}

function nvt() {
	S=$(FZF_DEFAULT_COMMAND="fd . --type d --max-depth 3 --exclude .git --exclude vendor --exclude node_modules ~/src" fzf)
	cd ${S}
	N=$(basename $S)
	tmux neww -n $N 'exec nvim .'
	tmux split-window -v -p 20
}

function new() {
	[ $TERM_PROGRAM != "tmux" ] && tmux has-session -t root && tmux attach -t root
	tmux neww
}

alias vim=nvim
alias k=kubectl
alias ks="echo $(kubectl ctx -c): $(kubectl ns -c)"
# alias code=nvim

# Create a new tmux root session if one doesn't exist.
tmux has-session -t root 2>/dev/null || tmux new-session -s root -d

